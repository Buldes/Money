{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\Website\\\\money-support\\\\src\\\\Functions\\\\genertaeCILItemList.js\";\nimport React from \"react\";\nimport { exampleData } from \"../Data/list\";\nimport { CILItem } from \"../Components/costIncomListItem\";\nimport { showData } from \"../Data/float\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var listItem = [];\nexport function RegenertateCILItemList() {\n  var listItems = [];\n  var counter = 0;\n  for (let i = 0; i < exampleData.length; i++) {\n    counter++;\n    var dateDay = exampleData[i].date.day.toString();\n    var dateMonth = exampleData[i].date.month.toString();\n    listItems.push({\n      li: /*#__PURE__*/_jsxDEV(CILItem, {\n        state: exampleData[i].state,\n        date: dateDay.padStart(2, '0') + \".\" + dateMonth.padStart(2, '0') + \".\" + exampleData[i].date.year,\n        amount: exampleData[i].amount,\n        id: exampleData[i].id,\n        x: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this),\n      key: exampleData[i].id\n    });\n    if (counter === showData) return;\n    listItem = listItems;\n  }\n}\n_c = RegenertateCILItemList;\nvar _c;\n$RefreshReg$(_c, \"RegenertateCILItemList\");","map":{"version":3,"names":["React","exampleData","CILItem","showData","jsxDEV","_jsxDEV","listItem","RegenertateCILItemList","listItems","counter","i","length","dateDay","date","day","toString","dateMonth","month","push","li","state","padStart","year","amount","id","x","fileName","_jsxFileName","lineNumber","columnNumber","key","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/Desktop/Website/money-support/src/Functions/genertaeCILItemList.js"],"sourcesContent":["import React from \"react\";\r\nimport { exampleData } from \"../Data/list\";\r\nimport { CILItem } from \"../Components/costIncomListItem\";\r\nimport { showData } from \"../Data/float\";\r\n\r\n\r\nexport var listItem = []\r\n\r\n\r\nexport function RegenertateCILItemList(){\r\n\r\n    var listItems = []\r\n    var counter = 0\r\n\r\n    for (let i = 0; i < exampleData.length; i++){\r\n        counter ++\r\n        var dateDay = exampleData[i].date.day.toString()\r\n        var dateMonth = exampleData[i].date.month.toString()\r\n    \r\n        listItems.push({li: <CILItem state={exampleData[i].state} \r\n                                          date={dateDay.padStart(2, '0') + \".\" + dateMonth.padStart(2, '0') + \".\" + exampleData[i].date.year}\r\n                                          amount={exampleData[i].amount} id={exampleData[i].id} x={5}/>,\r\n                        key: exampleData[i].id})\r\n        if (counter === showData) return\r\n        listItem = listItems\r\n    }\r\n\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,OAAO,QAAQ,iCAAiC;AACzD,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,OAAO,IAAIC,QAAQ,GAAG,EAAE;AAGxB,OAAO,SAASC,sBAAsBA,CAAA,EAAE;EAEpC,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,OAAO,GAAG,CAAC;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,WAAW,CAACU,MAAM,EAAED,CAAC,EAAE,EAAC;IACxCD,OAAO,EAAG;IACV,IAAIG,OAAO,GAAGX,WAAW,CAACS,CAAC,CAAC,CAACG,IAAI,CAACC,GAAG,CAACC,QAAQ,EAAE;IAChD,IAAIC,SAAS,GAAGf,WAAW,CAACS,CAAC,CAAC,CAACG,IAAI,CAACI,KAAK,CAACF,QAAQ,EAAE;IAEpDP,SAAS,CAACU,IAAI,CAAC;MAACC,EAAE,eAAEd,OAAA,CAACH,OAAO;QAACkB,KAAK,EAAEnB,WAAW,CAACS,CAAC,CAAC,CAACU,KAAM;QACvBP,IAAI,EAAED,OAAO,CAACS,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAGL,SAAS,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAGpB,WAAW,CAACS,CAAC,CAAC,CAACG,IAAI,CAACS,IAAK;QACnGC,MAAM,EAAEtB,WAAW,CAACS,CAAC,CAAC,CAACa,MAAO;QAACC,EAAE,EAAEvB,WAAW,CAACS,CAAC,CAAC,CAACc,EAAG;QAACC,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;MAC/EC,GAAG,EAAE7B,WAAW,CAACS,CAAC,CAAC,CAACc;IAAE,CAAC,CAAC;IACxC,IAAIf,OAAO,KAAKN,QAAQ,EAAE;IAC1BG,QAAQ,GAAGE,SAAS;EACxB;AAEJ;AAACuB,EAAA,GAlBexB,sBAAsB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}