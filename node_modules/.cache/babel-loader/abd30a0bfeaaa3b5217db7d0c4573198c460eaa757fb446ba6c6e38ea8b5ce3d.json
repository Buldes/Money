{"ast":null,"code":"import { addData } from \"./addData\";\nimport { inputAmout } from \"../getInput\";\nimport { ResetSorting } from \"./sort\";\nexport function manuelAddData() {\n  //reset the sorting\n  ResetSorting();\n\n  // get datas\n  const select = document.getElementById(\"ListDropBox\");\n  const selectedValue = select.options[select.selectedIndex].value;\n  const amoutInput = parseFloat(inputAmout.replace(\",\", \".\")).toFixed(2);\n  const currentDate = new Date();\n\n  // check if input is ok\n  if (isNaN(amoutInput)) {\n    console.log('[Ein Fehler ist aufgetreten:] Es wurde keine Zahl eingegeben');\n    alert(\"[Ungültige Eingabe] Bitte gebe eine Zahl ein.\");\n  } else if (amoutInput.length > 13) {\n    alert(\"Zahl ist zu groß! \\nMaximale im einstelligen Milliardenbereich \");\n    console.log(\"Warnung: Zahl zu groß\");\n  }\n  // add data\n  else {\n    addData({\n      newState: selectedValue,\n      newDay: currentDate.getDate(),\n      newMonth: currentDate.getMonth() + 1,\n      newYear: currentDate.getFullYear(),\n      newAmount: amoutInput\n    });\n  }\n}","map":{"version":3,"names":["addData","inputAmout","ResetSorting","manuelAddData","select","document","getElementById","selectedValue","options","selectedIndex","value","amoutInput","parseFloat","replace","toFixed","currentDate","Date","isNaN","console","log","alert","length","newState","newDay","getDate","newMonth","getMonth","newYear","getFullYear","newAmount"],"sources":["C:/Users/Kevin/Desktop/Website/money-support/src/Functions/DataFunctions/manuelAddData.js"],"sourcesContent":["import { addData } from \"./addData\";\r\nimport { inputAmout } from \"../getInput\";\r\nimport { ResetSorting } from \"./sort\";\r\n\r\nexport function manuelAddData(){\r\n    //reset the sorting\r\n    ResetSorting()\r\n\r\n    // get datas\r\n    const select = document.getElementById(\"ListDropBox\")\r\n    const selectedValue = select.options[select.selectedIndex].value\r\n    const amoutInput = parseFloat(inputAmout.replace(\",\", \".\")).toFixed(2)\r\n    const currentDate = new Date();\r\n\r\n    // check if input is ok\r\n    if (isNaN(amoutInput)){\r\n      console.log('[Ein Fehler ist aufgetreten:] Es wurde keine Zahl eingegeben');\r\n      alert(\"[Ungültige Eingabe] Bitte gebe eine Zahl ein.\")\r\n    }\r\n    else if (amoutInput.length > 13)\r\n    {\r\n      alert(\"Zahl ist zu groß! \\nMaximale im einstelligen Milliardenbereich \")\r\n      console.log(\"Warnung: Zahl zu groß\")\r\n    }\r\n    // add data\r\n    else{\r\n      addData({newState:selectedValue, newDay:currentDate.getDate(), newMonth:currentDate.getMonth() + 1, newYear:currentDate.getFullYear(), newAmount:amoutInput})\r\n    } \r\n  }"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,YAAY,QAAQ,QAAQ;AAErC,OAAO,SAASC,aAAaA,CAAA,EAAE;EAC3B;EACAD,YAAY,EAAE;;EAEd;EACA,MAAME,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;EACrD,MAAMC,aAAa,GAAGH,MAAM,CAACI,OAAO,CAACJ,MAAM,CAACK,aAAa,CAAC,CAACC,KAAK;EAChE,MAAMC,UAAU,GAAGC,UAAU,CAACX,UAAU,CAACY,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EACtE,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;;EAE9B;EACA,IAAIC,KAAK,CAACN,UAAU,CAAC,EAAC;IACpBO,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;IAC3EC,KAAK,CAAC,+CAA+C,CAAC;EACxD,CAAC,MACI,IAAIT,UAAU,CAACU,MAAM,GAAG,EAAE,EAC/B;IACED,KAAK,CAAC,iEAAiE,CAAC;IACxEF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EACA;EAAA,KACI;IACFnB,OAAO,CAAC;MAACsB,QAAQ,EAACf,aAAa;MAAEgB,MAAM,EAACR,WAAW,CAACS,OAAO,EAAE;MAAEC,QAAQ,EAACV,WAAW,CAACW,QAAQ,EAAE,GAAG,CAAC;MAAEC,OAAO,EAACZ,WAAW,CAACa,WAAW,EAAE;MAAEC,SAAS,EAAClB;IAAU,CAAC,CAAC;EAC/J;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}