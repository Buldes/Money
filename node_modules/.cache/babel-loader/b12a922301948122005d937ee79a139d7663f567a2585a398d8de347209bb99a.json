{"ast":null,"code":"import { exampleData } from \"../../Data/list\";\nimport { UpdateElemets } from \"../UpdateElements\";\nimport { SaveData } from \"./Datadealer\";\nexport function addData(props) {\n  // Reset Sorting\n  ResetSorting();\n  var newBankBalance = 0;\n\n  //calculate new bank balance\n  if (props.newState === \"Einkommen\") newBankBalance = parseFloat(exampleData[exampleData.length - 1].bankBalance) + parseFloat(props.newAmount);else newBankBalance = parseFloat(exampleData[exampleData.length - 1].bankBalance) - props.newAmount;\n\n  // adding data\n  var newData = {\n    id: exampleData.length,\n    state: props.newState,\n    date: {\n      day: props.newDay,\n      month: props.newMonth,\n      year: props.newYear\n    },\n    amount: parseFloat(props.newAmount),\n    bankBalance: newBankBalance\n  };\n  exampleData.push(newData);\n\n  // save data\n  SaveData();\n  // Update elements and make list correct\n  exampleData.reverse();\n  UpdateElemets();\n}","map":{"version":3,"names":["exampleData","UpdateElemets","SaveData","addData","props","ResetSorting","newBankBalance","newState","parseFloat","length","bankBalance","newAmount","newData","id","state","date","day","newDay","month","newMonth","year","newYear","amount","push","reverse"],"sources":["C:/Users/Kevin/Desktop/Website/money-support/src/Functions/DataFunctions/addData.js"],"sourcesContent":["import { exampleData } from \"../../Data/list\"\r\nimport { UpdateElemets } from \"../UpdateElements\"\r\nimport { SaveData } from \"./Datadealer\"\r\n\r\nexport function addData(props){\r\n  // Reset Sorting\r\n  ResetSorting()\r\n\r\n  var newBankBalance = 0\r\n\r\n  //calculate new bank balance\r\n  if (props.newState === \"Einkommen\") newBankBalance =  parseFloat(exampleData[exampleData.length-1].bankBalance) + parseFloat(props.newAmount)\r\n  else newBankBalance = parseFloat(exampleData[exampleData.length-1].bankBalance) - props.newAmount\r\n\r\n  // adding data\r\n  var newData = {id: exampleData.length, state:props.newState, \r\n                date: {day: props.newDay, month: props.newMonth, year: props.newYear}, amount:parseFloat(props.newAmount), bankBalance:newBankBalance}\r\n  exampleData.push(newData)\r\n\r\n  // save data\r\n  SaveData()\r\n  // Update elements and make list correct\r\n  exampleData.reverse()\r\n  UpdateElemets()\r\n} "],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,QAAQ,QAAQ,cAAc;AAEvC,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAC;EAC5B;EACAC,YAAY,EAAE;EAEd,IAAIC,cAAc,GAAG,CAAC;;EAEtB;EACA,IAAIF,KAAK,CAACG,QAAQ,KAAK,WAAW,EAAED,cAAc,GAAIE,UAAU,CAACR,WAAW,CAACA,WAAW,CAACS,MAAM,GAAC,CAAC,CAAC,CAACC,WAAW,CAAC,GAAGF,UAAU,CAACJ,KAAK,CAACO,SAAS,CAAC,MACxIL,cAAc,GAAGE,UAAU,CAACR,WAAW,CAACA,WAAW,CAACS,MAAM,GAAC,CAAC,CAAC,CAACC,WAAW,CAAC,GAAGN,KAAK,CAACO,SAAS;;EAEjG;EACA,IAAIC,OAAO,GAAG;IAACC,EAAE,EAAEb,WAAW,CAACS,MAAM;IAAEK,KAAK,EAACV,KAAK,CAACG,QAAQ;IAC7CQ,IAAI,EAAE;MAACC,GAAG,EAAEZ,KAAK,CAACa,MAAM;MAAEC,KAAK,EAAEd,KAAK,CAACe,QAAQ;MAAEC,IAAI,EAAEhB,KAAK,CAACiB;IAAO,CAAC;IAAEC,MAAM,EAACd,UAAU,CAACJ,KAAK,CAACO,SAAS,CAAC;IAAED,WAAW,EAACJ;EAAc,CAAC;EACpJN,WAAW,CAACuB,IAAI,CAACX,OAAO,CAAC;;EAEzB;EACAV,QAAQ,EAAE;EACV;EACAF,WAAW,CAACwB,OAAO,EAAE;EACrBvB,aAAa,EAAE;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}