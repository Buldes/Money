{"ast":null,"code":"import { exampleData, setExistedKeys } from \"../../Data/list\";\nexport function SaveData(data_key) {\n  localStorage.setItem(data_key, JSON.stringify(exampleData));\n}\n_c = SaveData;\nexport function ClearData() {\n  localStorage.removeItem(GetCurrentChoice());\n}\n_c2 = ClearData;\nexport function GetCurrentChoice() {\n  const key = localStorage.getItem(\"choice\");\n  if (key === null) {\n    SetCurrentChoice(\"data\");\n    return \"data\";\n  } else return key;\n}\n_c3 = GetCurrentChoice;\nexport function SetCurrentChoice(key) {\n  localStorage.setItem(\"choice\", key);\n}\n_c4 = SetCurrentChoice;\nexport function GetData(data_key) {\n  // set existed Keys\n  var keys = Object.keys(localStorage);\n  // remove \"choice\", before set\n  keys = keys.filter(item => item !== \"choice\");\n  // check if none\n  if (keys.length === 0) keys = [\"NewUser\"];\n  // set current choice at the beginning\n  const index = keys.indexOf(GetCurrentChoice());\n  if (index === -1) keys.push(GetCurrentChoice()); // add Get corrent choice, if its not existing jet\n  keys.splice(index, 1); // delete the choice of the list\n  keys.unshift(GetCurrentChoice());\n  // set existed key\n  setExistedKeys(keys);\n\n  // data\n  const dataGet = JSON.parse(localStorage.getItem(data_key));\n  if (dataGet === null) {\n    return \"no data\";\n  } else return dataGet;\n}\n_c5 = GetData;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SaveData\");\n$RefreshReg$(_c2, \"ClearData\");\n$RefreshReg$(_c3, \"GetCurrentChoice\");\n$RefreshReg$(_c4, \"SetCurrentChoice\");\n$RefreshReg$(_c5, \"GetData\");","map":{"version":3,"names":["exampleData","setExistedKeys","SaveData","data_key","localStorage","setItem","JSON","stringify","_c","ClearData","removeItem","GetCurrentChoice","_c2","key","getItem","SetCurrentChoice","_c3","_c4","GetData","keys","Object","filter","item","length","index","indexOf","push","splice","unshift","dataGet","parse","_c5","$RefreshReg$"],"sources":["C:/Users/Kevin/Desktop/Website/money-support/src/Functions/DataFunctions/Datadealer.js"],"sourcesContent":["import { exampleData, setExistedKeys } from \"../../Data/list\";\r\n\r\nexport function SaveData(data_key){\r\n    localStorage.setItem(data_key, JSON.stringify(exampleData))\r\n}\r\n\r\nexport function ClearData(){\r\n    localStorage.removeItem(GetCurrentChoice());\r\n}\r\n\r\nexport function GetCurrentChoice(){\r\n    const key = localStorage.getItem(\"choice\")\r\n\r\n    if (key === null) {\r\n        SetCurrentChoice(\"data\")\r\n        return \"data\"\r\n    }\r\n    else return key \r\n}\r\n\r\nexport function SetCurrentChoice(key){\r\n    localStorage.setItem(\"choice\", key)\r\n}\r\n\r\nexport function GetData(data_key){\r\n    // set existed Keys\r\n    var keys = Object.keys(localStorage);\r\n    // remove \"choice\", before set\r\n    keys = keys.filter(item => item !== \"choice\")\r\n    // check if none\r\n    if (keys.length === 0) keys = [\"NewUser\"]\r\n    // set current choice at the beginning\r\n    const index = keys.indexOf(GetCurrentChoice())\r\n    if (index === -1) keys.push(GetCurrentChoice()) // add Get corrent choice, if its not existing jet\r\n    keys.splice(index, 1)  // delete the choice of the list\r\n    keys.unshift(GetCurrentChoice())\r\n    // set existed key\r\n    setExistedKeys(keys)\r\n\r\n    // data\r\n    const dataGet = JSON.parse(localStorage.getItem(data_key))\r\n    \r\n    if (dataGet === null){\r\n        return \"no data\"\r\n    }\r\n    else return dataGet\r\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,iBAAiB;AAE7D,OAAO,SAASC,QAAQA,CAACC,QAAQ,EAAC;EAC9BC,YAAY,CAACC,OAAO,CAACF,QAAQ,EAAEG,IAAI,CAACC,SAAS,CAACP,WAAW,CAAC,CAAC;AAC/D;AAACQ,EAAA,GAFeN,QAAQ;AAIxB,OAAO,SAASO,SAASA,CAAA,EAAE;EACvBL,YAAY,CAACM,UAAU,CAACC,gBAAgB,EAAE,CAAC;AAC/C;AAACC,GAAA,GAFeH,SAAS;AAIzB,OAAO,SAASE,gBAAgBA,CAAA,EAAE;EAC9B,MAAME,GAAG,GAAGT,YAAY,CAACU,OAAO,CAAC,QAAQ,CAAC;EAE1C,IAAID,GAAG,KAAK,IAAI,EAAE;IACdE,gBAAgB,CAAC,MAAM,CAAC;IACxB,OAAO,MAAM;EACjB,CAAC,MACI,OAAOF,GAAG;AACnB;AAACG,GAAA,GAReL,gBAAgB;AAUhC,OAAO,SAASI,gBAAgBA,CAACF,GAAG,EAAC;EACjCT,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEQ,GAAG,CAAC;AACvC;AAACI,GAAA,GAFeF,gBAAgB;AAIhC,OAAO,SAASG,OAAOA,CAACf,QAAQ,EAAC;EAC7B;EACA,IAAIgB,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACf,YAAY,CAAC;EACpC;EACAe,IAAI,GAAGA,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,QAAQ,CAAC;EAC7C;EACA,IAAIH,IAAI,CAACI,MAAM,KAAK,CAAC,EAAEJ,IAAI,GAAG,CAAC,SAAS,CAAC;EACzC;EACA,MAAMK,KAAK,GAAGL,IAAI,CAACM,OAAO,CAACd,gBAAgB,EAAE,CAAC;EAC9C,IAAIa,KAAK,KAAK,CAAC,CAAC,EAAEL,IAAI,CAACO,IAAI,CAACf,gBAAgB,EAAE,CAAC,EAAC;EAChDQ,IAAI,CAACQ,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC,EAAE;EACvBL,IAAI,CAACS,OAAO,CAACjB,gBAAgB,EAAE,CAAC;EAChC;EACAV,cAAc,CAACkB,IAAI,CAAC;;EAEpB;EACA,MAAMU,OAAO,GAAGvB,IAAI,CAACwB,KAAK,CAAC1B,YAAY,CAACU,OAAO,CAACX,QAAQ,CAAC,CAAC;EAE1D,IAAI0B,OAAO,KAAK,IAAI,EAAC;IACjB,OAAO,SAAS;EACpB,CAAC,MACI,OAAOA,OAAO;AACvB;AAACE,GAAA,GAtBeb,OAAO;AAAA,IAAAV,EAAA,EAAAI,GAAA,EAAAI,GAAA,EAAAC,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}