{"ast":null,"code":"import { setExampleData } from \"../Data/list\";\nimport { CalculateMonthAvarge } from \"./Analyse/calculateMonth\";\nimport { CalculateChartData } from \"./DataFunctions/ChartData\";\nimport { GetData } from \"./DataFunctions/Datadealer\";\nexport function Initialization() {\n  // get data\n  var storageData = GetData();\n\n  // add data for \"welcome\"\n  var date = new Date();\n  if (storageData === \"no data\") {\n    storageData = [{\n      id: 0,\n      state: \"Initialization\",\n      date: {\n        day: date.getDate(),\n        month: 5,\n        year: 2023\n      },\n      amount: 0,\n      bankBalance: 0\n    }, {\n      id: 1,\n      state: \"Einkommen\",\n      date: {\n        day: 1,\n        month: 5,\n        year: 2023\n      },\n      amount: 1,\n      bankBalance: 1\n    }, {\n      id: 2,\n      state: \"Ausgaben\",\n      date: {\n        day: 1,\n        month: 5,\n        year: 2023\n      },\n      amount: 1,\n      bankBalance: 0\n    }];\n  }\n  setExampleData(storageData);\n\n  //calculate\n  CalculateMonthAvarge();\n  CalculateChartData();\n}\n_c = Initialization;\nvar _c;\n$RefreshReg$(_c, \"Initialization\");","map":{"version":3,"names":["setExampleData","CalculateMonthAvarge","CalculateChartData","GetData","Initialization","storageData","date","Date","id","state","day","getDate","month","year","amount","bankBalance","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/Desktop/Website/money-support/src/Functions/StartFunction.js"],"sourcesContent":["import { setExampleData } from \"../Data/list\";\r\nimport { CalculateMonthAvarge } from \"./Analyse/calculateMonth\";\r\nimport { CalculateChartData } from \"./DataFunctions/ChartData\";\r\nimport { GetData } from \"./DataFunctions/Datadealer\";\r\n\r\nexport function Initialization(){\r\n    // get data\r\n    var storageData = GetData()\r\n\r\n    // add data for \"welcome\"\r\n    var date = new Date()\r\n    if (storageData === \"no data\"){\r\n        storageData = [{id: 0, state: \"Initialization\", date: {day: date.getDate(), month: 5, year: 2023}, amount: 0, bankBalance:0},\r\n                        {id: 1, state: \"Einkommen\", date: {day: 1, month: 5, year: 2023}, amount: 1, bankBalance:1},\r\n                        {id: 2, state: \"Ausgaben\", date: {day: 1, month: 5, year: 2023}, amount: 1, bankBalance:0}]\r\n    }\r\n    \r\n\r\n    setExampleData(storageData)\r\n\r\n    //calculate\r\n    CalculateMonthAvarge()\r\n    CalculateChartData()\r\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,cAAc;AAC7C,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,OAAO,QAAQ,4BAA4B;AAEpD,OAAO,SAASC,cAAcA,CAAA,EAAE;EAC5B;EACA,IAAIC,WAAW,GAAGF,OAAO,EAAE;;EAE3B;EACA,IAAIG,IAAI,GAAG,IAAIC,IAAI,EAAE;EACrB,IAAIF,WAAW,KAAK,SAAS,EAAC;IAC1BA,WAAW,GAAG,CAAC;MAACG,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,gBAAgB;MAAEH,IAAI,EAAE;QAACI,GAAG,EAAEJ,IAAI,CAACK,OAAO,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAI,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,WAAW,EAAC;IAAC,CAAC,EAC5G;MAACP,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,WAAW;MAAEH,IAAI,EAAE;QAACI,GAAG,EAAE,CAAC;QAAEE,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAI,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,WAAW,EAAC;IAAC,CAAC,EAC3F;MAACP,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,UAAU;MAAEH,IAAI,EAAE;QAACI,GAAG,EAAE,CAAC;QAAEE,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAI,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,WAAW,EAAC;IAAC,CAAC,CAAC;EAC/G;EAGAf,cAAc,CAACK,WAAW,CAAC;;EAE3B;EACAJ,oBAAoB,EAAE;EACtBC,kBAAkB,EAAE;AACxB;AAACc,EAAA,GAlBeZ,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}